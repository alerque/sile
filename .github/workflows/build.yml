name: Build

on: [push, pull_request]

jobs:

  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache test fonts
        uses: actions/cache@v2
        with:
          path: |
            .fonts
            .sources
          key: fonts-${{ hashFiles('Makefile-fonts') }}
      - name: Cache lua_modules
        uses: actions/cache@v2
        with:
          path: |
            lua_modules
          key: luarocks-${{ hashFiles('Makefile-luarocks', 'sile-dev-1.rockspec') }}
      - name: Fetch tags
        run: |
          git fetch --prune --tags ||:
      - name: Install system dependencies
        run: |
          sudo apt-get install fonts-sil-gentiumplus libarchive-tools libfontconfig1-dev libharfbuzz-dev libicu-dev liblua5.3-dev libpng-dev lua5.3 lua-sec lua-socket lua-zlib-dev luarocks poppler-utils
      - name: Configure
        run: |
          ./bootstrap.sh
          ./configure --with-manual --with-examples
          echo "VERSION=$(./build-aux/git-version-gen .tarball-version)" >> $GITHUB_ENV
          echo "MAKEFLAGS=-j$(nproc) -Otarget" >> $GITHUB_ENV
      - name: Make
        run: |
          make
      - name: Package
        run: |
          make dist
      - name: Upload artifacts
        if: ${{ !contains(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v2
        with:
          name: sile-${{ env.VERSION }}
          path: sile-${{ env.VERSION }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        if: contains(github.ref, 'refs/tags/v')
        with:
          body_path: sile-${{ env.VERSION }}.md
          files: |
            sile-${{ env.VERSION }}.pdf
            sile-${{ env.VERSION }}.zip
            sile-${{ env.VERSION }}.tar.xz

  nix-flake:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v14
        # https://github.com/cachix/install-nix-action/#usage-with-flakes
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/i6laym9jw3wg9mw6ncyrk6gjx4l34vvx/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Print nixpkgs version
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

      - name: Print whether nixpkgs' stdenv is darwin
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).stdenv.isDarwin'

      - name: Evaluate nixpkgs' sile.meta
        run: nix eval --json nixpkgs#sile.meta

      - name: Evaluate nixpkgs' sile.meta
        run: nix eval --json .#sile.meta

      - name: Check nix build
        run: |
          nix build
      - name: Check nix flake
        run: |
          nix flake check
      - name: Check nix shell
        run: |
          nix shell -c true
